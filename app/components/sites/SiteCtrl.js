'use strict';
/*jshint camelcase: false*/

var _ = require('lodash');
var moment = require('moment');
var sitesReports = require('../reports/sitesReports');

module.exports = function ($scope, $routeParams, $location, $route, dataSvc, busySvc, ngDialog, updateSvc, NgTableParams) {
  busySvc.busy('site');
  var colsBase = [
    { id: 'button', clazz: 'primary', on: '(hover && !siteHover)', show: true, width: '1%' },
    { title: 'Matricule', sortable: 'empl_pk', filter: { empl_pk: 'text' }, field: 'empl_pk', show: true, width: '10%' },
    { title: 'Titre', sortable: 'empl_gender', id: 'empl_gender', align: 'right', show: true, width: '1%' },
    { title: 'Nom', sortable: 'empl_surname', filter: { empl_surname: 'text' }, id: 'empl_surname', shrinkable: true, show: true, width: '40%' },
    { title: 'Pr&eacute;nom', sortable: 'empl_firstname', filter: { empl_firstname: 'text' }, id: 'empl_firstname', shrinkable: true, show: true, width: '40%' },
    { title: 'Statut', sortable: 'empl_permanent', id: 'empl_permanent', align: 'center', show: true, width: '1%' }
  ];

  $scope.$watch('certificates', function (certificates) {
    _.each(certificates, function (cert) {
      _.find($scope.cols, { id: 'cert', cert_pk: cert.cert_pk }).show = cert.checked || false;
    });
  }, true);

  Promise.all([dataSvc.getSiteEmployeesWithStats($routeParams.site_pk), dataSvc.getSiteWithStats($routeParams.site_pk), dataSvc.getCertificates(), dataSvc.getLatestUpdate()])
    .then(_.spread(function (employees, site, certificates, update) {
      $scope.site = site;
      $scope.certificates = _.values(certificates);
      $scope.update = update;
      $scope.cols = colsBase.concat(_.map(certificates, function (cert) {
        return {
          title: cert.cert_short,
          sortable: 'stats.certificates[' + cert.cert_pk + '].expiryDate',
          id: 'cert',
          cert_pk: cert.cert_pk,
          show: false,
          align: 'center',
          width: '1%'
        };
      }));

      $scope.tp = new NgTableParams(_({ sorting: { empl_surname: 'asc' }, count: 10 }).extend($location.search()).mapValues(function (val) {
        return _.isString(val) ? decodeURI(val) : val;
      }).value(), {
        filterDelay: 0,
        defaultSort: 'asc',
        dataset: _.values(employees)
      });

      $scope.$apply(); // force $location to sync with the browser
      $scope.$watch(function () {
        return JSON.stringify(_.mapKeys($scope.tp.url(), _.flow(_.nthArg(1), decodeURI)));
      }, function () {
        $location.search(_.mapValues(_.mapKeys($scope.tp.url(), _.flow(_.nthArg(1), decodeURI)), decodeURIComponent)).replace();
      });
      busySvc.done('site');
    }), _.partial(busySvc.done, 'site'));

  $scope.editNotes = function () {
    ngDialog.open({
      template: 'components/dialogs/edit_notes.html',
      scope: _.extend($scope.$new(), {
        notes: $scope.site.site_notes,
        _title: $scope.site.site_name,
        callback: function (notes, close) {
          updateSvc.createSite($scope.site.site_pk, $scope.site.site_name, $scope.site.site_dept_fk, notes).then(function () {
            close();
            $route.reload();
            $scope.$emit('alert', { type: 'success', msg: 'Informations mises &agrave; jour.' });
          });
        }
      })
    });
  };

  $scope.getFilterDisplay = function (key, value) {
    var col = _.find($scope.cols, function (col) {
      return _.find(col, key);
    });

    return _.extend({ title: col.title },
      (function () {
        switch (key) {
          case 'dept.dept_id':
            return { link: 'est', value: _.find(col.data, { id: value }).title };
          default:
            return { value: value };
        }
      })());
  };

  $scope.export = function () {
    var data = $scope.tp.settings().getData(new NgTableParams($scope.tp.parameters(), {
      dataOptions: { applyPaging: false, applyFilter: false },
      dataset: $scope.tp.settings().dataset
    }));

    ngDialog.open({
      template: './components/dialogs/export_options_pdf.html',
      scope: _.extend($scope.$new(false), {
        callback: function (params, close) {
          busySvc.busy('report', true);
          sitesReports.generateDashboard(params, {
              title: $scope.site.site_name + ' - ' + moment().format('DD/MM/YYYY'),
              author: 'Generated by ' + $location.host()
            }, $location.absUrl().substring(0, $location.absUrl().indexOf('?')), $scope.site, data, $scope.cols, _.keyBy($scope.certificates, 'cert_pk'))
            .download(moment().format('YYYY-MM-DD') + ' - ' + $scope.site.site_name + '.pdf');
          busySvc.done('report');
          close();
        }
      })
    });
  };

  $scope.selectEmployee = function (empl_pk) {
    $location.path('/employees/' + empl_pk).search({});
  };
};
